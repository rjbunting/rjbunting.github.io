---
const { title, img, authors, desc, url, badge, tags, target = "_blank", disableHover = false, noLink = false } = Astro.props;
// Provide a plain-text title for alt attributes and accessibility (strip any HTML tags)
const plainTitle = String(title ?? '').replace(/<[^>]*>/g, '').replace(/\s+/g, ' ').trim();
const hoverClass = disableHover ? '' : 'hover:scale-[102%]';
const noHoverClass = disableHover ? 'no-hover-scale' : '';
const searchText = `${title ?? ''} ${authors ?? ''} ${desc ?? ''} ${tags ? tags.join(' ') : ''}`.toLowerCase();
---

<div class="reveal transition-opacity duration-700 ease-out opacity-0 mb-0.5" data-search={searchText}>
  <div
    class={`rounded-lg bg-base-100 hover:shadow-xl transition ease-in-out ${hoverClass} ${noHoverClass} p-0`}
  >
    {
      /* Render as a link by default, or a non-link container when noLink is true */
    }
    { noLink ? (
      <div class="block no-underline">
        <div class="hero-content items-center flex-col md:flex-row gap-3">
          {
            img && (
              <img
                src={img}
                alt={plainTitle}
                class="w-full md:w-auto md:max-w-[12rem] rounded-lg object-cover flex-shrink-0 mx-auto md:mx-0 md:mr-4"
                style="aspect-ratio: 16/9; cursor:default;"
                loading="lazy"
                onclick="event.stopPropagation();"
                onpointerdown="event.stopPropagation();"
              />
             )
          }
          <div class="flex-grow w-full">
            <h1 class="text-sm font-semibold flex items-center gap-1 mb-0">
              <span set:html={String(title ?? '')}></span>
              <slot />
              {badge && <div class="badge badge-secondary ml-1">{badge}</div>}
            </h1>
            <p class="py-0 text-sm font-medium">{authors}</p>
            <p class="py-0 text-sm">{desc}</p>
            <div class="card-actions justify-start flex flex-wrap gap-1 mt-0.5">
              {
                tags &&
                  tags.map((tag) => <div class="badge badge-outline">{tag}</div>)
              }
            </div>
          </div>
        </div>
      </div>
    ) : (
      <a href={url} target={target} class="block no-underline">
        <div class="hero-content items-center flex-col md:flex-row gap-3">
          {
            img && (
              <img
                src={img}
                alt={plainTitle}
                class="w-full md:w-auto md:max-w-[12rem] rounded-lg object-cover flex-shrink-0 mx-auto md:mx-0 md:mr-4"
                style="aspect-ratio: 16/9; cursor:default;"
                loading="lazy"
                onclick="event.stopPropagation();"
                onpointerdown="event.stopPropagation();"
              />
             )
          }
          <div class="flex-grow w-full">
            <h1 class="text-sm font-semibold flex items-center gap-1 mb-0">
              <span set:html={String(title ?? '')}></span>
              <slot />
              {badge && <div class="badge badge-secondary ml-1">{badge}</div>}
            </h1>
            <p class="py-0 text-sm font-medium">{authors}</p>
            <p class="py-0 text-sm">{desc}</p>
            <div class="card-actions justify-start flex flex-wrap gap-1 mt-0.5">
              {
                tags &&
                  tags.map((tag) => <div class="badge badge-outline">{tag}</div>)
              }
            </div>
          </div>
        </div>
      </a>
    )}
  </div>
</div>
