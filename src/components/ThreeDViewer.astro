---
// Simple 3D molecule viewer using 3Dmol.js
// Props:
//  - src: path to structure file (public or absolute URL)
//  - format: optional format ('pdb','xyz') default 'pdb'
//  - height: CSS height (e.g. '360px')
const { src = '/sample_methane.pdb', format = 'pdb', height = '360px' } = Astro.props;
const id = `viewer-${Math.random().toString(36).slice(2)}`;
---

<div id={id} class="w-full rounded" style={`height: ${height};`}></div>

<script type="module">
{`(async function() {
  const container = document.getElementById('${id}');
  try {
    if (!window.$3Dmol) {
      await new Promise((resolve, reject) => {
        const s = document.createElement('script');
        s.src = 'https://3dmol.csb.pitt.edu/build/3Dmol-min.js';
        s.async = true;
        s.onload = () => resolve();
        s.onerror = reject;
        document.head.appendChild(s);
      });
    }
    if (!container) return;
    const config = { backgroundColor: 'white' };
    const viewer = $3Dmol.createViewer(container, config);
    const res = await fetch('${src}');
    const text = await res.text();
    viewer.addModel(text, '${format}');
    viewer.setStyle({}, {stick: {radius:0.2}, sphere:{scale:0.3}});
    viewer.zoomTo();
    viewer.render();
  } catch (e) {
    console.warn('3D viewer failed to initialize', e);
    if (container) container.innerHTML = '<div class="p-4 text-sm text-error">3D viewer failed to load.</div>';
  }
})();`}
</script>
